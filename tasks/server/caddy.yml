# - name: Install Caddy
#   package:
#     name: caddy
#     state: latest

- name: Ensure service config directory exists
  file:
    path: /etc/systemd/system/{{ caddy_service }}.service.d
    state: directory


- name: Ensure desired user is set to run Caddy
  ini_file:
    path: /etc/systemd/system/{{ caddy_service }}.service.d/override.conf
    option: "{{ item }}"
    section: Service
    value: "{{ caddy_user }}"
  loop:
    - User
    - Group
  notify:
    - systemd reload
    - caddy restart

- meta: flush_handlers

- name: Enable Caddy service
  service:
    name: "{{ caddy_service }}"
    enabled: true
    state: started

- name: Create main Caddyfile
  template:
    src: caddy/Caddyfile.j2
    dest: /etc/caddy/Caddyfile
    mode: "u=rw,g=r,o=r"
  notify: caddy restart

- name: Create Caddyfile entries
  blockinfile:
    create: true
    path: >-
      {%- if item.file -%}
      /etc/caddy/Caddyfile.d/{{ item.file }}.conf
      {%- else -%}
      /etc/caddy/Caddyfile
      {%- endif -%}
    block: "{{ lookup('template', 'caddy/entry.j2') }}"
    marker: "# {mark} ANSIBLE MANAGED BLOCK {{ item.domain }}"
  loop: "{{ caddy_entries }}"
  notify: caddy restart

- name: Create symlink of Caddy certificates to ssl directory
  file:
    src: /var/lib/caddy/.local/share/caddy/certificates
    dest: /etc/ssl/caddy
    state: link
    force: true

- name: Check if Caddy completion file exists for zsh
  stat:
    path: /usr/local/share/zsh/site-functions/_caddy
  register: _caddy_completion_check
  changed_when: false

- when: not _caddy_completion_check.stat.exists
  block:
    - name: Ensure zsh plugins directory exists
      file:
        path: /usr/local/share/zsh/site-functions
        state: directory
    - name: Install Caddy completion file for zsh
      shell: caddy completion zsh > /usr/local/share/zsh/site-functions/_caddy
