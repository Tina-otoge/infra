# - set_fact:
#     _containers_pods: |
#       {% for container in containers | dict2items %}
#       {% if container.value.pod | default([]) %}
#       - {{ container.value.pod }}
#       {% endif %}
#       {% endfor %}

# - name: Prepare pods
#   containers.podman.podman_pod:
#     name: "{{ item }}"
#     state: created
#   loop: "{{ _containers_pods | from_yaml | default([]) | unique | list }}"
#   when: _containers_pods | from_yaml

- set_fact:
    _containers_volumes: |
      {% for container in containers | dict2items %}
      {% for volume in container.value.volumes | default([]) %}
      {% if ':' in volume and '/' in volume.split(':')[0] %}
      - {{ volume.split(':')[0] }}
      {% endif %}
      {% endfor %}
      {% endfor %}

- name: Prepare volume mount points
  file:
    path: "{{ item }}"
    state: directory
  loop: "{{ _containers_volumes | from_yaml | default([]) | unique }}"

- set_fact:
    _containers_networks: |
      {% for container in containers | dict2items %}
      {% if container.value.network | default([]) %}
      - {{ container.value.network }}
      {% endif %}
      {% endfor %}

- name: Prepare networks
  containers.podman.podman_network:
    name: "{{ item }}"
    state: present
  loop: "{{ _containers_networks | from_yaml | default([]) | unique | list }}"

- name: Create containers
  containers.podman.podman_container:
    name: "{{ item.key }}"
    image: "{{ item.value.image }}"
    state: started
    publish: >-
      {%- for port in item.value.ports | default([]) -%}
      {%- if not ':' in (port | string) -%}
      "{{ port }}:{{ port }}"
      {%- else -%}
      "{{ port }}"
      {%- endif -%}
      {%- endfor -%}
    volumes: "{{ item.value.volumes | default([]) }}"
    env: "{{ item.value.env | default({}) }}"
    restart_policy: unless-stopped
    label: "{{ item.value.labels | default ({}) }}"
    user: "{{ item.value.user | default(omit) }}"
    network: "{{ item.value.network | default(omit) }}"
    pod: "{{ item.value.pod | default(omit) }}"
    command: "{{ item.value.command | default(omit) }}"
  loop: "{{ containers | dict2items }}"
