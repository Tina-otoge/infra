http_domain: laffey.tina.moe
public_ip: 198.27.82.171
graylog_url: https://graylog.tina.moe/


user_tasks:
  - prometheus
  - loki


packages:
  - libcurl-devel # for NUT
  - rclone
  - syncthing
  - ufw


firewall:
  default: allow
  rules:
    - port: "{{ prometheus_node_exporter_port }}"
      action: deny
    - port: "{{ prometheus_node_exporter_port }}"
      from: "{{ public_ip }}"
      action: allow

    - port: "{{ prometheus_port }}"
      action: deny
    - port: "{{ prometheus_port }}"
      from: "{{ public_ip }}"
      action: allow

    - port: "{{ caddy_admin_port }}"
      action: deny
    - port: "{{ caddy_admin_port }}"
      from: "{{ public_ip }}"
      action: allow

    - port: "{{ loki_port }}"
      action: deny
    - port: "{{ loki_port }}"
      from: "{{ public_ip }}"
      action: allow


users:
  - akeyro
  - koneko
  - noa
  - platea
  - reaxt
  - sayaka
  - test

users_admins:
  - tina

skel:
  - www
  - wwws/example.com


caddy_prometheus: true
caddy_global_extra: |
  admin :{{ caddy_admin_port }}

# caddy_logs_outputs:
#   graylog: net localhost:5555

caddy_extra: |
  import users.d/*.conf

caddy_error_handlers:
  - 502

caddy_entries:
  # Machine domain
  - domain: "{{ http_domain }}"
    root: /home/tina/wwws/laffey
    file: tina
    reverses:
      - path: /fail
        to: 0
      - path: "{{ cockpit_url_root }}"
        to: 9090
      - path: "{{ flood_url_root }}"
        to: 3000
      - path: /qbit
        remove_path: true
        to: "{{ qbittorrent_webui_port }}"
      - path: /syncthing
        to: 8384
        extra:
          header_up Host {upstream_hostport}
        remove_path: true
    extra: |
      @userdir {
        path_regexp userdir ^/~(\w+)/
      }
      handle @userdir {
        uri strip_prefix /~{re.userdir.1}/
        file_server browse {
          root /home/{re.userdir.1}/www/
        }
      }

  # Tina
  - domain: kuma.tina.moe
    robots: false
    file: tina
    reverses:
      - to: "{{ uptime_kuma_port }}"
  - domain: grafana.tina.moe
    robots: false
    file: tina
    reverses:
      - to: "{{ grafana_port }}"
  - domain: tina.moe
    root: /home/tina/wwws/tina
    file: tina
    reverses:
      - path: /infra
        to: "{{ infra_webui_port }}"
        remove_path: true
    extra: |
      handle_path /private/* {
        root * /home/tina/wwws/private
        file_server
      }
      redir /private /private/
  - domain: couscous.tina.moe wiki.couscous.tina.moe
    robots: false
    file: tina
    reverses:
      - to: 57348
  - domain: pixiv.tina.moe
    file: tina
    robots: false
    reverses:
      - to: 8282
    # extra: |
    #   @artworks path_regexp ^/\w{2}/artworks/(\d+)
    #   handle @artworks {
    #     redir /artworks/{re.artworks.1}
    #   }
  - domain: www.pixiv.tina.moe
    file: tina
    extra: |
      redir https://pixiv.tina.moe{uri}
  - domain: taiko.tina.moe
    robots: false
    file: tina
    reverses:
      - to: 5000
  - domain: six.tina.moe
    robots: false
    root: /home/tina/wwws/six
    file: tina_six
    reverses:
      - path: /jellyfin
        to: "{{ jellyfin_port }}"
  - domain: vault.tina.moe
    robots: false
    file: tina
    reverses:
      - to: "{{ vaultwarden_port }}"
  - domain: drs.tina.moe
    robots: false
    file: tina
    reverses:
      - to: "{{ shlag_webui_port }}"
  - domain: nut.tina.moe
    robots: false
    file: tina
    reverses:
      - to: "{{ nut_port }}"
  - domain: foil.tina.moe
    robots: false
    file: tina
    reverses:
      - to: "{{ foil_port }}"

  # Savatier
  - domain: six.savatier.fr
    robots: false
    root: /home/tina/wwws/six
    file: tina_six
    extra: |
      redir https://six.tina.moe{uri}

  # MSN
  - domain: demo.asso-msn.fr
    robots: false
    file: msn
    reverses:
      - to: "{{ msnweb_demo_port }}"
  - domain: asso-msn.fr
    file: msn
    reverses:
      - to: "{{ msnweb_port }}"
    extra: |
      handle_path /assets/* {
        root * /home/tina/wwws/asso-msn.fr/assets
        file_server
      }

      handle_path /discord {
        redir https://discord.gg/k4CVGDQ
      }



paths:
  /srv/media:
    owner: tina


tunnels:
  # node_exporter
  - user: tina
    remote_host: turbo.tina.moe
    remote_port: 9100
    local_port: 9101
  - user: tina
    remote_host: nagato.lan
    remote_port: 9100
    local_port: 9102


repositories:
  - src: https://github.com/Tina-otoge/infra-webui
  - src: https://github.com/asso-msn/msn-web
    name: msnweb-demo
    version: develop
  - src: https://github.com/asso-msn/msn-web
    name: msnweb
    version: release
  - src: https://github.com/asso-msn/helloasso-discord-role
    version: main


user_services:
  infra_webui:
    workdir: "{{ repositories_dir }}/infra-webui"
    cmd: |
      {{ python_setup }}
      pip install gunicorn
      gunicorn src:app -b {{ loopback_ip }}:{{ infra_webui_port }}
  couscous_infra:
    workdir: "{{ repositories_dir }}/couscous"
    cmd: "{{ compose_setup }}"
  six:
    workdir: "{{ compose_dir }}/six"
    cmd: "{{ compose_setup }}"
    depend: home-tina-mnt-turbo.mount
  # flood:
  #   workdir: "{{ compose_dir }}/flood"
  #   cmd: |
  #     rm -rfv {{ ansible_user_dir }}/.config/flood/rtorrent/rtorrent.sock
  #     {{ compose_setup }}
  pixivfe:
    workdir: "{{ repositories_dir }}/PixivFE"
    cmd: |
      ./patch/patch.sh
      {{ compose_setup }}
  # taiko:
  #   workdir: "{{ repositories_dir }}/TaikoLocalServer"
  #   cmd: |
  #     chmod +x TaikoLocalServer
  #     ./TaikoLocalServer
  taiko:
    workdir: "{{ repositories_dir }}/tls-jp-april-2023"
    cmd: |
      dotnet run --project TaikoLocalServer
  syncthing:
    create: false
  msnweb_demo:
    workdir: "{{ repositories_dir }}/msnweb-demo"
    cmd: |
      {{ python_setup }}
      alembic upgrade head
      flask setup
      RUN_TASKS=1 flask run -h {{ loopback_ip }} -p {{ msnweb_demo_port }}
  msnweb:
    workdir: "{{ repositories_dir }}/msnweb"
    cmd: |
      {{ python_setup }}
      alembic upgrade head
      flask setup
      RUN_TASKS=1 flask run -h {{ loopback_ip }} -p {{ msnweb_port }}
  rclone_msn:
    workdir: "{{ ansible_user_dir }}/wwws/asso-msn.fr/assets"
    script: |
      while true; do
        date
        rclone sync -v msn:Website/Assets/ .
        echo Waiting 60s
        sleep 60
      done
  rclone_tina:
    workdir: "{{ ansible_user_dir }}/wwws/tina/assets/"
    script: |
      while true; do
        date
        rclone sync -v tina:/ cloud
        echo Waiting 60s
        sleep 60
      done
  watchdog_six:
    script: |
      restart_service() {
        echo "Test file not found, restarting"
        systemctl --user restart six
      }

      while true; do
        podman exec six_jellyfin_1 bash -c '[ -d /mnt/sakura/public/Works/Music/Singles/ ]' || restart_service
        sleep 60
      done
  helloasso_discord_role:
    workdir: "{{ repositories_dir }}/helloasso-discord-role"
    cmd: |
      {{ python_setup }}
      python main.py
    calendar: "*-*-* *:00/5"
  shlag_webui:
    workdir: "{{ repositories_dir }}/shlag-webui"
    cmd: |
      {{ python_setup }}
      flask run -h {{ loopback_ip }} -p {{ shlag_webui_port }}
  nut:
    workdir: "{{ repositories_dir }}/nut"
    cmd: |
      {{ python_setup }}
      python nut.py -s -S -m {{ loopback_ip }} -p {{ nut_port }}
  ownfoil:
    workdir: "{{ repositories_dir }}/ownfoil"
    # Chunked send implementation not supported by gunicorn so we use Flask dev
    # server
    cmd: |
      {{ python_setup }}
      FLASK_APP=app/app:app flask run -h {{ loopback_ip }} -p {{ foil_port }}


quadlets:
  # prometheus:
  #   image: prom/prometheus
  #   tag: latest
  #   user: "{{ ansible_user_id }}"
  #   network: host
  #   exec: |
  #     --config.file=/etc/prometheus/prometheus.yml
  #     --storage.tsdb.path=/prometheus
  #     --web.listen-address="{{ loopback_ip }}:{{ prometheus_port }}"
  #   volumes:
  #     - "{{ ansible_user_dir }}/.config/prometheus:/etc/prometheus"
  #     - "{{ ansible_user_dir }}/.local/share/prometheus:/prometheus"
  # grafana:
  #   image: grafana/grafana-oss
  #   tag: main
  #   network: host
  #   env:
  #     GF_SERVER_HTTP_ADDR: "{{ loopback_ip }}"
  #     GF_SERVER_HTTP_PORT: "{{ grafana_port }}"
  #   user: root
  #   volumes:
  #     - "{{ ansible_user_dir }}/.local/share/grafana:/var/lib/grafana"
  # loki:
  #   image: grafana/loki
  #   tag: main
  #   user: root
  #   ports:
  #     - "{{ loki_port }}:3100"
  #   volumes:
  #     - "{{ ansible_user_dir }}/.config/loki:/etc/loki"
  #     - "{{ ansible_user_dir }}/.local/share/loki:/loki"
  qbit:
    image: lscr.io/linuxserver/qbittorrent
    tag: latest
    ports:
      - "{{ loopback_ip }}:{{ qbittorrent_webui_port }}:{{ qbittorrent_webui_port }}"
    volumes:
      - "{{ ansible_user_dir }}/.config/qbittorrent:/config"
      - "{{ ansible_user_dir }}/mnt/sakura-private/Downloads/torrents:/mnt/downloads"
      - "{{ ansible_user_dir }}/mnt/sakura:/mnt/sakura"
    env: "{{ linuxserver_env }}"
  kuma:
    image: louislam/uptime-kuma
    tag: latest
    ports:
      - "{{ loopback_ip }}:{{ uptime_kuma_port }}:{{ uptime_kuma_port }}"
    volumes:
      - "{{ ansible_user_dir }}/.local/share/uptime-kuma:/app/data"
  vaultwarden:
    image: vaultwarden/server
    tag: latest
    ports:
      - "{{ loopback_ip }}:{{ vaultwarden_port }}:80"
    volumes:
      - "{{ ansible_user_dir }}/.config/vaultwarden:/data"


compose_services:
  - six
  - flood


user_mounts:
  - what: tina@turbo.tina.moe:/
    where: "{{ ansible_user_dir }}/mnt/turbo"
    type: fuse.sshfs
    description: Savatier Home Freebox VM
    test: "{{ ansible_user_dir }}/mnt/turbo/mnt/Freebox"


torrents_dir: "{{ ansible_user_dir }}/mnt/sakura-private/Downloads/torrents"
