server_tasks:
  - dnsmasq

packages:
  - cifs-utils
  - cockpit-file-sharing
  - cockpit-identities
  - dnsmasq
  - samba
  - samba-client
  - samba-common
  - syncthing
  - wsdd
  # Python
  - bzip2-devel
  - libffi-devel
  - openssl-devel
  - readline-devel

dns_servers:
  - 192.168.1.254 # Freebox server
  - 8.8.8.8 # Google DNS 1
  - 8.8.4.4 # Google DNS 2

dns_local_suffixes:
  - lan
  - local

hosts_map:
  192.168.1.1: nagato.lan arcade.tina.moe nagato.tina.moe cachan.savatier.fr home.tina.moe foil.tina.moe
  192.168.1.3: ninox.lan
  192.168.1.5: rootage.lan
  192.168.1.65: pop.lan tv.lan
  192.168.1.254: freebox.lan
  127.0.0.2: sddt.amlog.sys-all.net

tunnels:
  - user: tina
    ssh_host: laffey.tina.moe
    remote_host: 127.0.0.1
    remote_port: "{{ jellyfin_port }}"
    local_port: "{{ jellyfin_port }}"
    local_host: 192.168.1.1

users_admins:
  - tina

upgrade_then_reboot: false

user_mounts:
  - what: tina@turbo.tina.moe:/
    where: "{{ ansible_user_dir }}/mnt/turbo"
    type: fuse.sshfs
    description: Savatier Home Freebox VM
    test: "{{ ansible_user_dir }}/mnt/turbo/mnt/Freebox"
    options: "idmap=user,follow_symlinks,allow_other"

caddy_error_handlers:
  - 502

caddy_entries:
  - domain: nagato.lan
    file: nagato
    extra: |
      redir /* https://nagato.tina.moe{uri}
  - domain: "{{ http_domain }}"
    root: /srv/www/nagato
    browser: true
    file: nagato
    robots: false
    reverses:
      - path: /fail
        to: 0
      - path: "{{ cockpit_url_root }}"
        to: "{{ cockpit_port }}"
      - path: /syncthing
        to: 8384
        extra:
          header_up Host {upstream_hostport}
        remove_path: true
      - path: /sonarr
        to: 8989
      - path: /qbit
        remove_path: true
        to: "{{ qbittorrent_webui_port }}"
      - path: /jackett
        to: 9117
      - path: /prowlarr
        to: "{{ prowlarr_port }}"
      - path: /flood
        to: 3000
      - path: /lidarr
        to: 8686
      - path: /navi
        to: "{{ navidrome_port }}"
    extra: |
      handle_path /files/* {
        root * /srv/www/files
        file_server browse
      }
  - domain: arcade.tina.moe
    file: tina
    robots: false
    extra: |
      @private remote_ip private_ranges
      @public not remote_ip private_ranges

      handle @public {
        handle / {
                root * /srv/www/arcade/public
                file_server
        }
        handle /* {
                redir * /
        }
      }

      handle @private {
        handle / {
                root * /srv/www/arcade/private
                file_server
        }
        reverse_proxy /photon/* :7001
        redir /photon /photon/

        redir / /photon
      }
  - domain: turbo.tina.moe
    file: tina
    robots: false
    extra: |
      handle {
        redir https://nagato.tina.moe{uri}
      }
  - domain: ani.turbo.tina.moe
    file: tina
    robots: false
    extra: |
      redir https://aniboard.tina.moe{uri}
  - domain: foil.tina.moe
    file: tina
    robots: false
    reverses:
      - to: "{{ foil_port }}"
  - domain: aniboard.tina.moe
    file: tina
    robots: false
    reverses:
      - to: "{{ aniboard_port }}"

repositories:
  - src: https://github.com/Tina-otoge/photongenic

user_services:
  photon:
    workdir: "{{ repositories_dir }}/photongenic"
    cmd: |
      {{ python_setup }}
      pip install gunicorn
      (python archive.py &)
      SCRIPT_NAME=/photon gunicorn -w 4 webui.app:app -b 127.0.0.1:7001
  syncthing:
    create: false
  aniboard:
    workdir: "{{ repositories_dir }}/AniBoard"
    cmd: |
      {{ python_setup }}
      gunicorn -w 4 --timeout 120 app:app -b {{ loopback_ip }}:{{ aniboard_port }}


quadlets:
  ownfoil:
    image: a1ex4/ownfoil
    ports:
      - "{{ loopback_ip }}:{{ foil_port }}:8465"
    volumes:
      - "{{ ansible_user_dir }}/.config/ownfoil:/app/config"
      - "{{ ansible_user_dir }}/Games/Console/Switch:/games"

  sonarr:
    image: lscr.io/linuxserver/sonarr
    tag: latest
    volumes:
      - "{{ ansible_user_dir }}/.config/sonarr:/config"
      - "/mnt/sakura:/mnt/sakura"
    ports:
      - "{{ loopback_ip }}:8989:8989"
    env: "{{ linuxserver_env }}"
    network: six.network
  lidarr:
    image: lscr.io/linuxserver/lidarr
    tag: latest
    volumes:
      - "{{ ansible_user_dir }}/.config/lidarr:/config"
      - "/mnt/sakura:/mnt/sakura"
    ports:
      - "{{ loopback_ip }}:8686:8686"
    env: "{{ linuxserver_env }}"
    network: six.network
  qbit:
    image: lscr.io/linuxserver/qbittorrent
    tag: latest
    volumes:
      - "{{ ansible_user_dir }}/.config/qbittorrent:/config"
      - /mnt/sakura:/mnt/sakura
    ports:
      - "{{ loopback_ip }}:{{ qbittorrent_webui_port }}:{{ qbittorrent_webui_port }}"
    env: "{{ linuxserver_env }}"
    network: six.network
  jackett:
    image: lscr.io/linuxserver/jackett
    tag: latest
    volumes:
      - "{{ ansible_user_dir }}/.config/jackett:/config"
      - /mnt/sakura:/mnt/sakura
    ports:
      - "{{ loopback_ip }}:9117:9117"
    env: "{{ linuxserver_env }}"
    network: six.network
  prowlarr:
    image: lscr.io/linuxserver/prowlarr
    tag: latest
    volumes:
      - "{{ ansible_user_dir }}/.config/prowlarr:/config"
    ports:
      - "{{ loopback_ip }}:{{ prowlarr_port }}:{{ prowlarr_port }}"
    env: "{{ linuxserver_env }}"
    network: six.network
  flood:
    image: jesec/flood
    tag: master
    volumes:
      - "{{ ansible_user_dir }}/.local/share/flood:/data"
    ports:
      - "{{ loopback_ip }}:{{ flood_port }}:3000"
    exec: --baseuri /flood
    network: six.network
  navidrome:
    image: deluan/navidrome
    tag: latest
    ports:
      - "{{ loopback_ip }}:{{ navidrome_port }}:{{ navidrome_port }}"
    volumes:
     - "{{ ansible_user_dir }}/.local/share/navidrome:/data"
     - /mnt/sakura/public/Works/Music:/music:ro
    env:
      ND_BASEURL: /navi
      ND_SCANNER_GROUPALBUMRELEASES: "true"
     

